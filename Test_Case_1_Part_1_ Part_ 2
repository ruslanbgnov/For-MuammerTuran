public class TestCase1 {

    WebDriver driver;

    @BeforeClass
    public void setup() {
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();

        driver.get("https://www.cars.com/");
    }
    @AfterClass
    public void tearDown(){
        driver.quit();
    }


    @Test
    public void testCase1() throws InterruptedException {


        Actions act = new Actions(driver);

        WebElement dropDown = driver.findElement(By.xpath("//select[@name='stockType']"));
        act.click(dropDown)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .click().perform();

        WebElement chooseToyota = driver.findElement(By.xpath("//select[@name='makeId']"));

        act.click(chooseToyota)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .sendKeys(Keys.ARROW_DOWN)
                .click().perform();

        Select chooseCorolla = new Select(driver.findElement(By.xpath("//select[@name='modelId']")));
        Thread.sleep(2000);
        chooseCorolla.selectByVisibleText("Corolla");

        Select price = new Select(driver.findElement(By.xpath("//select[@name='priceMax']")));
        Thread.sleep(2000);
        price.selectByIndex(8);

        Select miles = new Select(driver.findElement(By.xpath("//select[@name='radius']")));
        Thread.sleep(2000);
        miles.selectByValue("40");

        WebElement ZIPCODE = driver.findElement(By.xpath("//input[@placeholder='ZIP']"));
        ZIPCODE.clear();
        ZIPCODE.sendKeys("60018");

        WebElement searchButton = driver.findElement(By.xpath("//input[@class='NZE2g']"));
        searchButton.click();

        WebElement saleValidation = driver.findElement(By.xpath("//h1[@class='srp-header']"));

        String actualText = saleValidation.getText();
        String expectedText = "Certified Used Toyota Corolla for Sale";

        Thread.sleep(2000);
        System.out.println(actualText);
        System.out.println(actualText.equals(expectedText));

        Assert.assertTrue(expectedText.contains(actualText));


    }


    @Test
    public void testP2() {

        WebElement validateMiles = driver.findElement(By.xpath("//option[contains(text(),'40 miles')]"));
        Assert.assertTrue(validateMiles.isSelected());

        WebElement certPreOwnedButton = driver.findElement(By.xpath("//label[contains(text(),'Certified Pre-Owned')]"));
        Assert.assertTrue(certPreOwnedButton.getText().contains("Certified Pre-Owned"));


        WebElement isToyotaSelected = driver.findElement(By.xpath("//label[contains(@class,'checkbox__label')][contains(text(),'Toyota')]"));
        Assert.assertTrue(isToyotaSelected.isEnabled());

        WebElement isCorolla = driver.findElement(By.xpath("//li[@class='checkbox shortlist']//label[contains(@class,'checkbox__label')][contains(text(),'Corolla')]"));
        Assert.assertTrue(isCorolla.isEnabled());
        System.out.println(isCorolla.isEnabled());

    }
}
